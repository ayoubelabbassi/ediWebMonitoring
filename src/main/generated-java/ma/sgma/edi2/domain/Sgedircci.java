/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-backend-jpa:src/main/java/domain/Entity.e.vm.java
 * Template is part of Open Source Project: https://github.com/jaxio/pack-backend-jpa
 */
package ma.sgma.edi2.domain;

import static javax.persistence.CascadeType.ALL;
import static javax.persistence.CascadeType.MERGE;
import static javax.persistence.CascadeType.PERSIST;
import static javax.persistence.FetchType.LAZY;
import static javax.persistence.GenerationType.IDENTITY;
import static javax.persistence.TemporalType.TIMESTAMP;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.Transient;
import javax.validation.constraints.Digits;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlTransient;

import org.hibernate.validator.constraints.NotEmpty;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.google.common.base.MoreObjects;
import com.google.common.base.Objects;
import com.jaxio.jpa.querybyexample.Identifiable;

import ma.sgma.edi2.audit.AuditContextHolder;

@Entity
@Table(name = "sgedircci")
public class Sgedircci implements Identifiable<Integer>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = LoggerFactory.getLogger(Sgedircci.class);

    // Raw attributes
    private Integer id;
    private String codeLigne;
    private String codeBanque;
    private String codeLocalite;
    private String numeroGuichet;
    private String anneeRcc;
    private String moisRcc;
    private Integer ncompteCarte;
    private Integer rcompteCarte;
    private Integer douvertureEmission;
    private String dcompteCarte;
    private String nomRsociale;
    private String numIdentification;
    private String centreRc;
    private String rc;
    private String pays;
    private String ville;
    private String adresse;
    private Long sdebut;
    private Long totalMcredit;
    private Long totalMdebit;
    private Long soldeFmois;
    private String champSupp2;
    private String champSupp3;
    private String champSupp4;
    private String champSupp5;
    private Date creationDate;
    private String creationAuthor;
    private Date lastModificationDate;
    private String lastModificationAuthor;
    private String motif;
    private String lib1;
    private String lib2;
    private String lib3;

    // Many to one
    private SgediDictodc qualiteSclient;
    private Userrole codeRole;
    private Sgedixml idXml;
    private SgediParams statutInt;
    private SgediDictodc typeIdentification;
    private SgediParams statutEch;
    private SgediParams codeErr;

    // One to many
    private List<SgediRccidotation> sgediRccidotations = new ArrayList<SgediRccidotation>();
    private List<SgediEdircciMo> sgediEdircciMos = new ArrayList<SgediEdircciMo>();
    // -- [id] ------------------------

    @Override
    @Column(name = "id", precision = 10)
    @GeneratedValue(strategy = IDENTITY)
    @Id
    public Integer getId() {
        return id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    public Sgedircci id(Integer id) {
        setId(id);
        return this;
    }

    @Override
    @Transient
    @XmlTransient
    public boolean isIdSet() {
        return id != null;
    }
    // -- [codeLigne] ------------------------

    @NotEmpty
    @Size(max = 50)
    @Column(name = "code_ligne", nullable = false, length = 50)
    public String getCodeLigne() {
        return codeLigne;
    }

    public void setCodeLigne(String codeLigne) {
        this.codeLigne = codeLigne;
    }

    public Sgedircci codeLigne(String codeLigne) {
        setCodeLigne(codeLigne);
        return this;
    }
    // -- [codeBanque] ------------------------

    @NotEmpty
    @Size(max = 3)
    @Column(name = "code_banque", nullable = false, length = 3)
    public String getCodeBanque() {
        return codeBanque;
    }

    public void setCodeBanque(String codeBanque) {
        this.codeBanque = codeBanque;
    }

    public Sgedircci codeBanque(String codeBanque) {
        setCodeBanque(codeBanque);
        return this;
    }
    // -- [codeLocalite] ------------------------

    @NotEmpty
    @Size(max = 3)
    @Column(name = "code_localite", nullable = false, length = 3)
    public String getCodeLocalite() {
        return codeLocalite;
    }

    public void setCodeLocalite(String codeLocalite) {
        this.codeLocalite = codeLocalite;
    }

    public Sgedircci codeLocalite(String codeLocalite) {
        setCodeLocalite(codeLocalite);
        return this;
    }
    // -- [numeroGuichet] ------------------------

    @NotEmpty
    @Size(max = 7)
    @Column(name = "numero_guichet", nullable = false, length = 7)
    public String getNumeroGuichet() {
        return numeroGuichet;
    }

    public void setNumeroGuichet(String numeroGuichet) {
        this.numeroGuichet = numeroGuichet;
    }

    public Sgedircci numeroGuichet(String numeroGuichet) {
        setNumeroGuichet(numeroGuichet);
        return this;
    }
    // -- [anneeRcc] ------------------------

    @NotEmpty
    @Size(max = 4)
    @Column(name = "annee_rcc", nullable = false, length = 4)
    public String getAnneeRcc() {
        return anneeRcc;
    }

    public void setAnneeRcc(String anneeRcc) {
        this.anneeRcc = anneeRcc;
    }

    public Sgedircci anneeRcc(String anneeRcc) {
        setAnneeRcc(anneeRcc);
        return this;
    }
    // -- [moisRcc] ------------------------

    @NotEmpty
    @Size(max = 4)
    @Column(name = "mois_rcc", nullable = false, length = 4)
    public String getMoisRcc() {
        return moisRcc;
    }

    public void setMoisRcc(String moisRcc) {
        this.moisRcc = moisRcc;
    }

    public Sgedircci moisRcc(String moisRcc) {
        setMoisRcc(moisRcc);
        return this;
    }
    // -- [ncompteCarte] ------------------------

    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "ncompte_carte", nullable = false, precision = 10)
    public Integer getNcompteCarte() {
        return ncompteCarte;
    }

    public void setNcompteCarte(Integer ncompteCarte) {
        this.ncompteCarte = ncompteCarte;
    }

    public Sgedircci ncompteCarte(Integer ncompteCarte) {
        setNcompteCarte(ncompteCarte);
        return this;
    }
    // -- [rcompteCarte] ------------------------

    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "rcompte_carte", nullable = false, precision = 10)
    public Integer getRcompteCarte() {
        return rcompteCarte;
    }

    public void setRcompteCarte(Integer rcompteCarte) {
        this.rcompteCarte = rcompteCarte;
    }

    public Sgedircci rcompteCarte(Integer rcompteCarte) {
        setRcompteCarte(rcompteCarte);
        return this;
    }
    // -- [douvertureEmission] ------------------------

    @Digits(integer = 10, fraction = 0)
    @NotNull
    @Column(name = "douverture_emission", nullable = false, precision = 10)
    public Integer getDouvertureEmission() {
        return douvertureEmission;
    }

    public void setDouvertureEmission(Integer douvertureEmission) {
        this.douvertureEmission = douvertureEmission;
    }

    public Sgedircci douvertureEmission(Integer douvertureEmission) {
        setDouvertureEmission(douvertureEmission);
        return this;
    }
    // -- [dcompteCarte] ------------------------

    @Size(max = 3)
    @Column(name = "dcompte_carte", length = 3)
    public String getDcompteCarte() {
        return dcompteCarte;
    }

    public void setDcompteCarte(String dcompteCarte) {
        this.dcompteCarte = dcompteCarte;
    }

    public Sgedircci dcompteCarte(String dcompteCarte) {
        setDcompteCarte(dcompteCarte);
        return this;
    }
    // -- [nomRsociale] ------------------------

    @Size(max = 250)
    @Column(name = "nom_rsociale", length = 250)
    public String getNomRsociale() {
        return nomRsociale;
    }

    public void setNomRsociale(String nomRsociale) {
        this.nomRsociale = nomRsociale;
    }

    public Sgedircci nomRsociale(String nomRsociale) {
        setNomRsociale(nomRsociale);
        return this;
    }
    // -- [numIdentification] ------------------------

    @NotEmpty
    @Size(max = 35)
    @Column(name = "num_identification", nullable = false, length = 35)
    public String getNumIdentification() {
        return numIdentification;
    }

    public void setNumIdentification(String numIdentification) {
        this.numIdentification = numIdentification;
    }

    public Sgedircci numIdentification(String numIdentification) {
        setNumIdentification(numIdentification);
        return this;
    }
    // -- [centreRc] ------------------------

    @Size(max = 3)
    @Column(name = "centre_rc", length = 3)
    public String getCentreRc() {
        return centreRc;
    }

    public void setCentreRc(String centreRc) {
        this.centreRc = centreRc;
    }

    public Sgedircci centreRc(String centreRc) {
        setCentreRc(centreRc);
        return this;
    }
    // -- [rc] ------------------------

    @Size(max = 6)
    @Column(name = "rc", length = 6)
    public String getRc() {
        return rc;
    }

    public void setRc(String rc) {
        this.rc = rc;
    }

    public Sgedircci rc(String rc) {
        setRc(rc);
        return this;
    }
    // -- [pays] ------------------------

    @Size(max = 2)
    @Column(name = "pays", length = 2)
    public String getPays() {
        return pays;
    }

    public void setPays(String pays) {
        this.pays = pays;
    }

    public Sgedircci pays(String pays) {
        setPays(pays);
        return this;
    }
    // -- [ville] ------------------------

    @Size(max = 25)
    @Column(name = "ville", length = 25)
    public String getVille() {
        return ville;
    }

    public void setVille(String ville) {
        this.ville = ville;
    }

    public Sgedircci ville(String ville) {
        setVille(ville);
        return this;
    }
    // -- [adresse] ------------------------

    @Size(max = 250)
    @Column(name = "adresse", length = 250)
    public String getAdresse() {
        return adresse;
    }

    public void setAdresse(String adresse) {
        this.adresse = adresse;
    }

    public Sgedircci adresse(String adresse) {
        setAdresse(adresse);
        return this;
    }
    // -- [sdebut] ------------------------

    @Digits(integer = 13, fraction = 0)
    @Column(name = "sdebut", precision = 13)
    public Long getSdebut() {
        return sdebut;
    }

    public void setSdebut(Long sdebut) {
        this.sdebut = sdebut;
    }

    public Sgedircci sdebut(Long sdebut) {
        setSdebut(sdebut);
        return this;
    }
    // -- [totalMcredit] ------------------------

    @Digits(integer = 13, fraction = 0)
    @Column(name = "total_mcredit", precision = 13)
    public Long getTotalMcredit() {
        return totalMcredit;
    }

    public void setTotalMcredit(Long totalMcredit) {
        this.totalMcredit = totalMcredit;
    }

    public Sgedircci totalMcredit(Long totalMcredit) {
        setTotalMcredit(totalMcredit);
        return this;
    }
    // -- [totalMdebit] ------------------------

    @Digits(integer = 13, fraction = 0)
    @Column(name = "total_mdebit", precision = 13)
    public Long getTotalMdebit() {
        return totalMdebit;
    }

    public void setTotalMdebit(Long totalMdebit) {
        this.totalMdebit = totalMdebit;
    }

    public Sgedircci totalMdebit(Long totalMdebit) {
        setTotalMdebit(totalMdebit);
        return this;
    }
    // -- [soldeFmois] ------------------------

    @Digits(integer = 13, fraction = 0)
    @Column(name = "solde_fmois", precision = 13)
    public Long getSoldeFmois() {
        return soldeFmois;
    }

    public void setSoldeFmois(Long soldeFmois) {
        this.soldeFmois = soldeFmois;
    }

    public Sgedircci soldeFmois(Long soldeFmois) {
        setSoldeFmois(soldeFmois);
        return this;
    }
    // -- [champSupp2] ------------------------

    @Size(max = 400)
    @Column(name = "champ_supp2", length = 400)
    public String getChampSupp2() {
        return champSupp2;
    }

    public void setChampSupp2(String champSupp2) {
        this.champSupp2 = champSupp2;
    }

    public Sgedircci champSupp2(String champSupp2) {
        setChampSupp2(champSupp2);
        return this;
    }
    // -- [champSupp3] ------------------------

    @Size(max = 400)
    @Column(name = "champ_supp3", length = 400)
    public String getChampSupp3() {
        return champSupp3;
    }

    public void setChampSupp3(String champSupp3) {
        this.champSupp3 = champSupp3;
    }

    public Sgedircci champSupp3(String champSupp3) {
        setChampSupp3(champSupp3);
        return this;
    }
    // -- [champSupp4] ------------------------

    @Size(max = 400)
    @Column(name = "champ_supp4", length = 400)
    public String getChampSupp4() {
        return champSupp4;
    }

    public void setChampSupp4(String champSupp4) {
        this.champSupp4 = champSupp4;
    }

    public Sgedircci champSupp4(String champSupp4) {
        setChampSupp4(champSupp4);
        return this;
    }
    // -- [champSupp5] ------------------------

    @Size(max = 400)
    @Column(name = "champ_supp5", length = 400)
    public String getChampSupp5() {
        return champSupp5;
    }

    public void setChampSupp5(String champSupp5) {
        this.champSupp5 = champSupp5;
    }

    public Sgedircci champSupp5(String champSupp5) {
        setChampSupp5(champSupp5);
        return this;
    }
    // -- [creationDate] ------------------------

    @Column(name = "creation_date", length = 29)
    @Temporal(TIMESTAMP)
    public Date getCreationDate() {
        return creationDate;
    }

    public void setCreationDate(Date creationDate) {
        this.creationDate = creationDate;
    }

    public Sgedircci creationDate(Date creationDate) {
        setCreationDate(creationDate);
        return this;
    }
    // -- [creationAuthor] ------------------------

    @Column(name = "creation_author", length = 200)
    public String getCreationAuthor() {
        return creationAuthor;
    }

    public void setCreationAuthor(String creationAuthor) {
        this.creationAuthor = creationAuthor;
    }

    public Sgedircci creationAuthor(String creationAuthor) {
        setCreationAuthor(creationAuthor);
        return this;
    }
    // -- [lastModificationDate] ------------------------

    @Column(name = "last_modification_date", length = 29)
    @Temporal(TIMESTAMP)
    public Date getLastModificationDate() {
        return lastModificationDate;
    }

    public void setLastModificationDate(Date lastModificationDate) {
        this.lastModificationDate = lastModificationDate;
    }

    public Sgedircci lastModificationDate(Date lastModificationDate) {
        setLastModificationDate(lastModificationDate);
        return this;
    }
    // -- [lastModificationAuthor] ------------------------

    @Column(name = "last_modification_author", length = 200)
    public String getLastModificationAuthor() {
        return lastModificationAuthor;
    }

    public void setLastModificationAuthor(String lastModificationAuthor) {
        this.lastModificationAuthor = lastModificationAuthor;
    }

    public Sgedircci lastModificationAuthor(String lastModificationAuthor) {
        setLastModificationAuthor(lastModificationAuthor);
        return this;
    }
    // -- [motif] ------------------------

    @Size(max = 400)
    @Column(name = "motif", length = 400)
    public String getMotif() {
        return motif;
    }

    public void setMotif(String motif) {
        this.motif = motif;
    }

    public Sgedircci motif(String motif) {
        setMotif(motif);
        return this;
    }
    // -- [lib1] ------------------------

    @Size(max = 100)
    @Column(name = "lib1", length = 100)
    public String getLib1() {
        return lib1;
    }

    public void setLib1(String lib1) {
        this.lib1 = lib1;
    }

    public Sgedircci lib1(String lib1) {
        setLib1(lib1);
        return this;
    }
    // -- [lib2] ------------------------

    @Size(max = 100)
    @Column(name = "lib2", length = 100)
    public String getLib2() {
        return lib2;
    }

    public void setLib2(String lib2) {
        this.lib2 = lib2;
    }

    public Sgedircci lib2(String lib2) {
        setLib2(lib2);
        return this;
    }
    // -- [lib3] ------------------------

    @Size(max = 100)
    @Column(name = "lib3", length = 100)
    public String getLib3() {
        return lib3;
    }

    public void setLib3(String lib3) {
        this.lib3 = lib3;
    }

    public Sgedircci lib3(String lib3) {
        setLib3(lib3);
        return this;
    }

    // -----------------------------------------------------------------
    // Many to One support
    // -----------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Sgedircci.qualiteSclient ==> SgediDictodc.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @JoinColumn(name = "qualite_sclient")
    @ManyToOne(cascade = { PERSIST, MERGE }, fetch = LAZY)
    public SgediDictodc getQualiteSclient() {
        return qualiteSclient;
    }

    /**
     * Set the {@link #qualiteSclient} without adding this Sgedircci instance on the passed {@link #qualiteSclient}
     */
    public void setQualiteSclient(SgediDictodc qualiteSclient) {
        this.qualiteSclient = qualiteSclient;
    }

    public Sgedircci qualiteSclient(SgediDictodc qualiteSclient) {
        setQualiteSclient(qualiteSclient);
        return this;
    }

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Sgedircci.codeRole ==> Userrole.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @JoinColumn(name = "code_role")
    @ManyToOne(cascade = { PERSIST, MERGE }, fetch = LAZY)
    public Userrole getCodeRole() {
        return codeRole;
    }

    /**
     * Set the {@link #codeRole} without adding this Sgedircci instance on the passed {@link #codeRole}
     */
    public void setCodeRole(Userrole codeRole) {
        this.codeRole = codeRole;
    }

    public Sgedircci codeRole(Userrole codeRole) {
        setCodeRole(codeRole);
        return this;
    }

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Sgedircci.idXml ==> Sgedixml.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @JoinColumn(name = "id_xml")
    @ManyToOne(cascade = { PERSIST, MERGE }, fetch = LAZY)
    public Sgedixml getIdXml() {
        return idXml;
    }

    /**
     * Set the {@link #idXml} without adding this Sgedircci instance on the passed {@link #idXml}
     */
    public void setIdXml(Sgedixml idXml) {
        this.idXml = idXml;
    }

    public Sgedircci idXml(Sgedixml idXml) {
        setIdXml(idXml);
        return this;
    }

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Sgedircci.statutInt ==> SgediParams.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @JoinColumn(name = "statut_int")
    @ManyToOne(cascade = { PERSIST, MERGE }, fetch = LAZY)
    public SgediParams getStatutInt() {
        return statutInt;
    }

    /**
     * Set the {@link #statutInt} without adding this Sgedircci instance on the passed {@link #statutInt}
     */
    public void setStatutInt(SgediParams statutInt) {
        this.statutInt = statutInt;
    }

    public Sgedircci statutInt(SgediParams statutInt) {
        setStatutInt(statutInt);
        return this;
    }

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Sgedircci.typeIdentification ==> SgediDictodc.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @NotNull
    @JoinColumn(name = "type_identification", nullable = false)
    @ManyToOne(cascade = { PERSIST, MERGE }, fetch = LAZY)
    public SgediDictodc getTypeIdentification() {
        return typeIdentification;
    }

    /**
     * Set the {@link #typeIdentification} without adding this Sgedircci instance on the passed {@link #typeIdentification}
     */
    public void setTypeIdentification(SgediDictodc typeIdentification) {
        this.typeIdentification = typeIdentification;
    }

    public Sgedircci typeIdentification(SgediDictodc typeIdentification) {
        setTypeIdentification(typeIdentification);
        return this;
    }

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Sgedircci.statutEch ==> SgediParams.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @JoinColumn(name = "statut_ech")
    @ManyToOne(cascade = { PERSIST, MERGE }, fetch = LAZY)
    public SgediParams getStatutEch() {
        return statutEch;
    }

    /**
     * Set the {@link #statutEch} without adding this Sgedircci instance on the passed {@link #statutEch}
     */
    public void setStatutEch(SgediParams statutEch) {
        this.statutEch = statutEch;
    }

    public Sgedircci statutEch(SgediParams statutEch) {
        setStatutEch(statutEch);
        return this;
    }

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Sgedircci.codeErr ==> SgediParams.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @JoinColumn(name = "code_err")
    @ManyToOne(cascade = { PERSIST, MERGE }, fetch = LAZY)
    public SgediParams getCodeErr() {
        return codeErr;
    }

    /**
     * Set the {@link #codeErr} without adding this Sgedircci instance on the passed {@link #codeErr}
     */
    public void setCodeErr(SgediParams codeErr) {
        this.codeErr = codeErr;
    }

    public Sgedircci codeErr(SgediParams codeErr) {
        setCodeErr(codeErr);
        return this;
    }

    // -----------------------------------------------------------------
    // One to Many support
    // -----------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // one to many: sgedircci ==> sgediRccidotations
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @OneToMany(mappedBy = "idrcci", orphanRemoval = true, cascade = ALL)
    public List<SgediRccidotation> getSgediRccidotations() {
        return sgediRccidotations;
    }

    /**
     * Set the {@link SgediRccidotation} list.
     * It is recommended to use the helper method {@link #addSgediRccidotation(SgediRccidotation)} / {@link #removeSgediRccidotation(SgediRccidotation)}
     * if you want to preserve referential integrity at the object level.
     *
     * @param sgediRccidotations the list to set
     */
    public void setSgediRccidotations(List<SgediRccidotation> sgediRccidotations) {
        this.sgediRccidotations = sgediRccidotations;
    }

    /**
     * Helper method to add the passed {@link SgediRccidotation} to the {@link #sgediRccidotations} list
     * and set this idrcci on the passed sgediRccidotation to preserve referential
     * integrity at the object level.
     *
     * @param sgediRccidotation the to add
     * @return true if the sgediRccidotation could be added to the sgediRccidotations list, false otherwise
     */
    public boolean addSgediRccidotation(SgediRccidotation sgediRccidotation) {
        if (getSgediRccidotations().add(sgediRccidotation)) {
            sgediRccidotation.setIdrcci(this);
            return true;
        }
        return false;
    }

    /**
     * Helper method to remove the passed {@link SgediRccidotation} from the {@link #sgediRccidotations} list and unset
     * this idrcci from the passed sgediRccidotation to preserve referential integrity at the object level.
     *
     * @param sgediRccidotation the instance to remove
     * @return true if the sgediRccidotation could be removed from the sgediRccidotations list, false otherwise
     */
    public boolean removeSgediRccidotation(SgediRccidotation sgediRccidotation) {
        if (getSgediRccidotations().remove(sgediRccidotation)) {
            sgediRccidotation.setIdrcci(null);
            return true;
        }
        return false;
    }

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // one to many: sgedircci ==> sgediEdircciMos
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @OneToMany(mappedBy = "idrcci", orphanRemoval = true, cascade = ALL)
    public List<SgediEdircciMo> getSgediEdircciMos() {
        return sgediEdircciMos;
    }

    /**
     * Set the {@link SgediEdircciMo} list.
     * It is recommended to use the helper method {@link #addSgediEdircciMo(SgediEdircciMo)} / {@link #removeSgediEdircciMo(SgediEdircciMo)}
     * if you want to preserve referential integrity at the object level.
     *
     * @param sgediEdircciMos the list to set
     */
    public void setSgediEdircciMos(List<SgediEdircciMo> sgediEdircciMos) {
        this.sgediEdircciMos = sgediEdircciMos;
    }

    /**
     * Helper method to add the passed {@link SgediEdircciMo} to the {@link #sgediEdircciMos} list
     * and set this idrcci on the passed sgediEdircciMo to preserve referential
     * integrity at the object level.
     *
     * @param sgediEdircciMo the to add
     * @return true if the sgediEdircciMo could be added to the sgediEdircciMos list, false otherwise
     */
    public boolean addSgediEdircciMo(SgediEdircciMo sgediEdircciMo) {
        if (getSgediEdircciMos().add(sgediEdircciMo)) {
            sgediEdircciMo.setIdrcci(this);
            return true;
        }
        return false;
    }

    /**
     * Helper method to remove the passed {@link SgediEdircciMo} from the {@link #sgediEdircciMos} list and unset
     * this idrcci from the passed sgediEdircciMo to preserve referential integrity at the object level.
     *
     * @param sgediEdircciMo the instance to remove
     * @return true if the sgediEdircciMo could be removed from the sgediEdircciMos list, false otherwise
     */
    public boolean removeSgediEdircciMo(SgediEdircciMo sgediEdircciMo) {
        if (getSgediEdircciMos().remove(sgediEdircciMo)) {
            sgediEdircciMo.setIdrcci(null);
            return true;
        }
        return false;
    }

    /**
     * Apply the default values.
     */
    public Sgedircci withDefaults() {
        setLastModificationDate(new Date());
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof Sgedircci && hashCode() == other.hashCode());
    }

    private IdentifiableHashBuilder identifiableHashBuilder = new IdentifiableHashBuilder();

    @Override
    public int hashCode() {
        return identifiableHashBuilder.hash(log, this);
    }

    /**
     * Construct a readable string representation for this Sgedircci instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this) //
                .add("id", getId()) //
                .add("codeLigne", getCodeLigne()) //
                .add("codeBanque", getCodeBanque()) //
                .add("codeLocalite", getCodeLocalite()) //
                .add("numeroGuichet", getNumeroGuichet()) //
                .add("anneeRcc", getAnneeRcc()) //
                .add("moisRcc", getMoisRcc()) //
                .add("ncompteCarte", getNcompteCarte()) //
                .add("rcompteCarte", getRcompteCarte()) //
                .add("douvertureEmission", getDouvertureEmission()) //
                .add("dcompteCarte", getDcompteCarte()) //
                .add("nomRsociale", getNomRsociale()) //
                .add("numIdentification", getNumIdentification()) //
                .add("centreRc", getCentreRc()) //
                .add("rc", getRc()) //
                .add("pays", getPays()) //
                .add("ville", getVille()) //
                .add("adresse", getAdresse()) //
                .add("sdebut", getSdebut()) //
                .add("totalMcredit", getTotalMcredit()) //
                .add("totalMdebit", getTotalMdebit()) //
                .add("soldeFmois", getSoldeFmois()) //
                .add("champSupp2", getChampSupp2()) //
                .add("champSupp3", getChampSupp3()) //
                .add("champSupp4", getChampSupp4()) //
                .add("champSupp5", getChampSupp5()) //
                .add("creationDate", getCreationDate()) //
                .add("creationAuthor", getCreationAuthor()) //
                .add("lastModificationDate", getLastModificationDate()) //
                .add("lastModificationAuthor", getLastModificationAuthor()) //
                .add("motif", getMotif()) //
                .add("lib1", getLib1()) //
                .add("lib2", getLib2()) //
                .add("lib3", getLib3()) //
                .toString();
    }

    @PrePersist
    protected void prePersist() {
        if (AuditContextHolder.audit()) {
            setCreationAuthor(AuditContextHolder.username());
            setCreationDate(new Date());
        }
    }

    @PreUpdate
    protected void preUpdate() {
        if (AuditContextHolder.audit()) {
            setLastModificationAuthor(AuditContextHolder.username());
            setLastModificationDate(new Date());
        }
    }
}