/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-jsf2-spring-conversation:src/main/java/domain/SearchForm.e.vm.java
 * Template is part of Open Source Project: https://github.com/jaxio/pack-jsf2-spring-conversation
 */
package ma.sgma.edi2.web.domain;

import static com.jaxio.jpa.querybyexample.PropertySelector.newPropertySelector;

import javax.inject.Named;

import com.jaxio.jpa.querybyexample.PropertySelector;
import com.jaxio.jpa.querybyexample.SearchParameters;

import ma.sgma.edi2.domain.SgediParams;
import ma.sgma.edi2.domain.SgediParams_;
import ma.sgma.edi2.web.domain.support.GenericSearchForm;
import ma.sgma.edi2.web.faces.ConversationContextScoped;

/**
 * View Helper to search {@link SgediParams}.
 * It exposes a {@link SgediParams} instance so it can be used in search by-example-query.
 */
@Named
@ConversationContextScoped
public class SgediParamsSearchForm extends GenericSearchForm<SgediParams, Integer, SgediParamsSearchForm> {
    private static final long serialVersionUID = 1L;
    protected SgediParams sgediParams = new SgediParams();
    protected PropertySelector<SgediParams, String> codeSelector = newPropertySelector(SgediParams_.code);
    protected PropertySelector<SgediParams, String> libelleSelector = newPropertySelector(SgediParams_.libelle);
    protected PropertySelector<SgediParams, String> lib1Selector = newPropertySelector(SgediParams_.lib1);
    protected PropertySelector<SgediParams, String> lib2Selector = newPropertySelector(SgediParams_.lib2);
    protected PropertySelector<SgediParams, String> lib3Selector = newPropertySelector(SgediParams_.lib3);

    public SgediParams getSgediParams() {
        return sgediParams;
    }

    @Override
    protected SgediParams getEntity() {
        return getSgediParams();
    }

    @Override
    public SgediParamsSearchForm newInstance() {
        return new SgediParamsSearchForm();
    }

    @Override
    public SearchParameters toSearchParameters() {
        SearchParameters sp = searchParameters();
        sp.property(codeSelector, libelleSelector, lib1Selector, lib2Selector, lib3Selector);
        return sp;
    }

    @Override
    public void resetWithOther(SgediParamsSearchForm other) {
        this.sgediParams = other.getSgediParams();
        this.codeSelector = other.getCodeSelector();
        this.libelleSelector = other.getLibelleSelector();
        this.lib1Selector = other.getLib1Selector();
        this.lib2Selector = other.getLib2Selector();
        this.lib3Selector = other.getLib3Selector();
    }

    // Property selectors
    public PropertySelector<SgediParams, String> getCodeSelector() {
        return codeSelector;
    }

    public PropertySelector<SgediParams, String> getLibelleSelector() {
        return libelleSelector;
    }

    public PropertySelector<SgediParams, String> getLib1Selector() {
        return lib1Selector;
    }

    public PropertySelector<SgediParams, String> getLib2Selector() {
        return lib2Selector;
    }

    public PropertySelector<SgediParams, String> getLib3Selector() {
        return lib3Selector;
    }
}
