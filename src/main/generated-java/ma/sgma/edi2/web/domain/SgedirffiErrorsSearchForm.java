/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-jsf2-spring-conversation:src/main/java/domain/SearchForm.e.vm.java
 * Template is part of Open Source Project: https://github.com/jaxio/pack-jsf2-spring-conversation
 */
package ma.sgma.edi2.web.domain;

import static com.jaxio.jpa.querybyexample.PropertySelector.newPropertySelector;

import javax.inject.Named;

import com.jaxio.jpa.querybyexample.PropertySelector;
import com.jaxio.jpa.querybyexample.SearchParameters;

import ma.sgma.edi2.domain.Sgedirffi;
import ma.sgma.edi2.domain.SgedirffiErrors;
import ma.sgma.edi2.domain.SgedirffiErrors_;
import ma.sgma.edi2.web.domain.support.GenericSearchForm;
import ma.sgma.edi2.web.faces.ConversationContextScoped;

/**
 * View Helper to search {@link SgedirffiErrors}.
 * It exposes a {@link SgedirffiErrors} instance so it can be used in search by-example-query.
 */
@Named
@ConversationContextScoped
public class SgedirffiErrorsSearchForm extends GenericSearchForm<SgedirffiErrors, Integer, SgedirffiErrorsSearchForm> {
    private static final long serialVersionUID = 1L;
    protected SgedirffiErrors sgedirffiErrors = new SgedirffiErrors();
    protected PropertySelector<SgedirffiErrors, String> proprieteSelector = newPropertySelector(SgedirffiErrors_.propriete);
    protected PropertySelector<SgedirffiErrors, String> motifSelector = newPropertySelector(SgedirffiErrors_.motif);
    protected PropertySelector<SgedirffiErrors, String> valueErrorSelector = newPropertySelector(SgedirffiErrors_.valueError);
    protected PropertySelector<SgedirffiErrors, Sgedirffi> coderffiSelector = newPropertySelector(SgedirffiErrors_.coderffi);

    public SgedirffiErrors getSgedirffiErrors() {
        return sgedirffiErrors;
    }

    @Override
    protected SgedirffiErrors getEntity() {
        return getSgedirffiErrors();
    }

    @Override
    public SgedirffiErrorsSearchForm newInstance() {
        return new SgedirffiErrorsSearchForm();
    }

    @Override
    public SearchParameters toSearchParameters() {
        SearchParameters sp = searchParameters();
        sp.fetch(SgedirffiErrors_.coderffi);
        sp.property(proprieteSelector, motifSelector, valueErrorSelector);
        sp.property(coderffiSelector);
        return sp;
    }

    @Override
    public void resetWithOther(SgedirffiErrorsSearchForm other) {
        this.sgedirffiErrors = other.getSgedirffiErrors();
        this.proprieteSelector = other.getProprieteSelector();
        this.motifSelector = other.getMotifSelector();
        this.valueErrorSelector = other.getValueErrorSelector();
        this.coderffiSelector = other.getCoderffiSelector();
    }

    // Property selectors
    public PropertySelector<SgedirffiErrors, String> getProprieteSelector() {
        return proprieteSelector;
    }

    public PropertySelector<SgedirffiErrors, String> getMotifSelector() {
        return motifSelector;
    }

    public PropertySelector<SgedirffiErrors, String> getValueErrorSelector() {
        return valueErrorSelector;
    }

    // Relation selectors
    public PropertySelector<SgedirffiErrors, Sgedirffi> getCoderffiSelector() {
        return coderffiSelector;
    }
}
