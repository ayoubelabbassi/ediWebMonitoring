/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-jsf2-spring-conversation:src/main/java/domain/SearchForm.e.vm.java
 * Template is part of Open Source Project: https://github.com/jaxio/pack-jsf2-spring-conversation
 */
package ma.sgma.edi2.web.domain;

import static com.jaxio.jpa.querybyexample.PropertySelector.newPropertySelector;

import javax.inject.Named;

import com.jaxio.jpa.querybyexample.PropertySelector;
import com.jaxio.jpa.querybyexample.SearchParameters;
import com.jaxio.jpa.querybyexample.TermSelector;

import ma.sgma.edi2.domain.Userrole;
import ma.sgma.edi2.domain.Userrole_;
import ma.sgma.edi2.web.domain.support.GenericSearchForm;
import ma.sgma.edi2.web.faces.ConversationContextScoped;

/**
 * View Helper to search {@link Userrole}.
 * It exposes a {@link Userrole} instance so it can be used in search by-example-query.
 */
@Named
@ConversationContextScoped
public class UserroleSearchForm extends GenericSearchForm<Userrole, Integer, UserroleSearchForm> {
    private static final long serialVersionUID = 1L;

    // full text search (applied first)
    protected TermSelector roleTermSelector = new TermSelector(Userrole_.role);

    // classic search
    protected Userrole userrole = new Userrole();
    protected PropertySelector<Userrole, String> roleSelector = newPropertySelector(Userrole_.role);

    public Userrole getUserrole() {
        return userrole;
    }

    @Override
    protected Userrole getEntity() {
        return getUserrole();
    }

    @Override
    public UserroleSearchForm newInstance() {
        return new UserroleSearchForm();
    }

    @Override
    public SearchParameters toSearchParameters() {
        SearchParameters sp = searchParameters();
        sp.term(termsOnAll, roleTermSelector);
        sp.property(roleSelector);
        return sp;
    }

    @Override
    public void resetWithOther(UserroleSearchForm other) {
        this.userrole = other.getUserrole();
        this.termsOnAll = other.getTermsOnAll();
        this.roleTermSelector = other.getRoleTermSelector();
        this.roleSelector = other.getRoleSelector();
    }

    // Term selectors    
    public TermSelector getRoleTermSelector() {
        return roleTermSelector;
    }

    // Property selectors
    public PropertySelector<Userrole, String> getRoleSelector() {
        return roleSelector;
    }
}
