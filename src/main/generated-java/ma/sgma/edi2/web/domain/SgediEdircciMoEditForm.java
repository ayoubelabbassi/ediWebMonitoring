/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-jsf2-spring-conversation:src/main/java/domain/EditForm.e.vm.java
 * Template is part of Open Source Project: https://github.com/jaxio/pack-jsf2-spring-conversation
 */
package ma.sgma.edi2.web.domain;

import javax.annotation.PostConstruct;
import javax.inject.Inject;
import javax.inject.Named;
import javax.validation.constraints.NotNull;

import ma.sgma.edi2.domain.SgediEdircciMo;
import ma.sgma.edi2.domain.SgediEdircciMo_;
import ma.sgma.edi2.domain.Sgedircci;
import ma.sgma.edi2.repository.SgediEdircciMoRepository;
import ma.sgma.edi2.web.domain.support.GenericEditForm;
import ma.sgma.edi2.web.domain.support.GenericToOneAssociation;
import ma.sgma.edi2.web.faces.ConversationContextScoped;

/**
 * View Helper/Controller to edit {@link SgediEdircciMo}.
 */
@Named
@ConversationContextScoped
public class SgediEdircciMoEditForm extends GenericEditForm<SgediEdircciMo, Integer> {
    @Inject
    protected SgediEdircciMoController sgediEdircciMoController;
    @Inject
    protected SgedircciController sgedircciController;
    protected GenericToOneAssociation<Sgedircci, Integer> idrcci;

    @Inject
    public SgediEdircciMoEditForm(SgediEdircciMoRepository sgediEdircciMoRepository, SgediEdircciMoGraphLoader sgediEdircciMoGraphLoader) {
        super(sgediEdircciMoRepository, sgediEdircciMoGraphLoader);
    }

    /**
     * The entity to edit/view.
     */
    public SgediEdircciMo getSgediEdircciMo() {
        return getEntity();
    }

    public String print() {
        return sgediEdircciMoController.print(getSgediEdircciMo());
    }

    @PostConstruct
    void setupIdrcciActions() {
        idrcci = new GenericToOneAssociation<Sgedircci, Integer>(sgedircciController, SgediEdircciMo_.idrcci) {
            @Override
            protected Sgedircci get() {
                return getSgediEdircciMo().getIdrcci();
            }

            @Override
            protected void set(Sgedircci sgedircci) {
                getSgediEdircciMo().setIdrcci(sgedircci);
            }

            @NotNull
            @Override
            public Sgedircci getSelected() {
                return super.getSelected();
            }
        };
    }

    public GenericToOneAssociation<Sgedircci, Integer> getIdrcci() {
        return idrcci;
    }
}
