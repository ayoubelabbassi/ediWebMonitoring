/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-jsf2-spring-conversation:src/main/java/domain/EditForm.e.vm.java
 * Template is part of Open Source Project: https://github.com/jaxio/pack-jsf2-spring-conversation
 */
package ma.sgma.edi2.web.domain;

import javax.annotation.PostConstruct;
import javax.inject.Inject;
import javax.inject.Named;
import javax.validation.constraints.NotNull;

import ma.sgma.edi2.domain.SgediDictodc;
import ma.sgma.edi2.domain.SgediEdircciMo;
import ma.sgma.edi2.domain.SgediParams;
import ma.sgma.edi2.domain.SgediRccidotation;
import ma.sgma.edi2.domain.Sgedircci;
import ma.sgma.edi2.domain.Sgedircci_;
import ma.sgma.edi2.domain.Sgedixml;
import ma.sgma.edi2.domain.Userrole;
import ma.sgma.edi2.repository.SgedircciRepository;
import ma.sgma.edi2.web.domain.support.GenericEditForm;
import ma.sgma.edi2.web.domain.support.GenericToManyAssociation;
import ma.sgma.edi2.web.domain.support.GenericToOneAssociation;
import ma.sgma.edi2.web.faces.ConversationContextScoped;
import ma.sgma.edi2.web.util.TabBean;

/**
 * View Helper/Controller to edit {@link Sgedircci}.
 */
@Named
@ConversationContextScoped
public class SgedircciEditForm extends GenericEditForm<Sgedircci, Integer> {
    @Inject
    protected SgedircciController sgedircciController;
    @Inject
    protected SgediDictodcController sgediDictodcController;
    protected GenericToOneAssociation<SgediDictodc, Integer> qualiteSclient;
    @Inject
    protected UserroleController userroleController;
    protected GenericToOneAssociation<Userrole, Integer> codeRole;
    @Inject
    protected SgedixmlController sgedixmlController;
    protected GenericToOneAssociation<Sgedixml, Integer> idXml;
    @Inject
    protected SgediParamsController sgediParamsController;
    protected GenericToOneAssociation<SgediParams, Integer> statutInt;
    protected GenericToOneAssociation<SgediDictodc, Integer> typeIdentification;
    protected GenericToOneAssociation<SgediParams, Integer> statutEch;
    protected GenericToOneAssociation<SgediParams, Integer> codeErr;
    @Inject
    protected SgediRccidotationController sgediRccidotationController;
    protected GenericToManyAssociation<SgediRccidotation, Integer> sgediRccidotations;
    @Inject
    protected SgediEdircciMoController sgediEdircciMoController;
    protected GenericToManyAssociation<SgediEdircciMo, Integer> sgediEdircciMos;
    protected TabBean tabBean = new TabBean();

    @Inject
    public SgedircciEditForm(SgedircciRepository sgedircciRepository, SgedircciGraphLoader sgedircciGraphLoader) {
        super(sgedircciRepository, sgedircciGraphLoader);
        this.setModule("RCCI");
    }

    /**
     * View helper to store the x-to-many associations tab's index. 
     */
    @Override
    public TabBean getTabBean() {
        return tabBean;
    }

    /**
     * The entity to edit/view.
     */
    public Sgedircci getSgedircci() {
        return getEntity();
    }

    public String print() {
        return sgedircciController.print(getSgedircci());
    }

    @PostConstruct
    void setupQualiteSclientActions() {
        qualiteSclient = new GenericToOneAssociation<SgediDictodc, Integer>(sgediDictodcController, Sgedircci_.qualiteSclient) {
            @Override
            protected SgediDictodc get() {
                return getSgedircci().getQualiteSclient();
            }

            @Override
            protected void set(SgediDictodc sgediDictodc) {
                getSgedircci().setQualiteSclient(sgediDictodc);
            }
        };
    }

    public GenericToOneAssociation<SgediDictodc, Integer> getQualiteSclient() {
        return qualiteSclient;
    }

    @PostConstruct
    void setupCodeRoleActions() {
        codeRole = new GenericToOneAssociation<Userrole, Integer>(userroleController, Sgedircci_.codeRole) {
            @Override
            protected Userrole get() {
                return getSgedircci().getCodeRole();
            }

            @Override
            protected void set(Userrole userrole) {
                getSgedircci().setCodeRole(userrole);
            }
        };
    }

    public GenericToOneAssociation<Userrole, Integer> getCodeRole() {
        return codeRole;
    }

    @PostConstruct
    void setupIdXmlActions() {
        idXml = new GenericToOneAssociation<Sgedixml, Integer>(sgedixmlController, Sgedircci_.idXml) {
            @Override
            protected Sgedixml get() {
                return getSgedircci().getIdXml();
            }

            @Override
            protected void set(Sgedixml sgedixml) {
                getSgedircci().setIdXml(sgedixml);
            }
        };
    }

    public GenericToOneAssociation<Sgedixml, Integer> getIdXml() {
        return idXml;
    }

    @PostConstruct
    void setupStatutIntActions() {
        statutInt = new GenericToOneAssociation<SgediParams, Integer>(sgediParamsController, Sgedircci_.statutInt) {
            @Override
            protected SgediParams get() {
                return getSgedircci().getStatutInt();
            }

            @Override
            protected void set(SgediParams sgediParams) {
                getSgedircci().setStatutInt(sgediParams);
            }
        };
    }

    public GenericToOneAssociation<SgediParams, Integer> getStatutInt() {
        return statutInt;
    }

    @PostConstruct
    void setupTypeIdentificationActions() {
        typeIdentification = new GenericToOneAssociation<SgediDictodc, Integer>(sgediDictodcController, Sgedircci_.typeIdentification) {
            @Override
            protected SgediDictodc get() {
                return getSgedircci().getTypeIdentification();
            }

            @Override
            protected void set(SgediDictodc sgediDictodc) {
                getSgedircci().setTypeIdentification(sgediDictodc);
            }

            @NotNull
            @Override
            public SgediDictodc getSelected() {
                return super.getSelected();
            }
        };
    }

    public GenericToOneAssociation<SgediDictodc, Integer> getTypeIdentification() {
        return typeIdentification;
    }

    @PostConstruct
    void setupStatutEchActions() {
        statutEch = new GenericToOneAssociation<SgediParams, Integer>(sgediParamsController, Sgedircci_.statutEch) {
            @Override
            protected SgediParams get() {
                return getSgedircci().getStatutEch();
            }

            @Override
            protected void set(SgediParams sgediParams) {
                getSgedircci().setStatutEch(sgediParams);
            }
        };
    }

    public GenericToOneAssociation<SgediParams, Integer> getStatutEch() {
        return statutEch;
    }

    @PostConstruct
    void setupCodeErrActions() {
        codeErr = new GenericToOneAssociation<SgediParams, Integer>(sgediParamsController, Sgedircci_.codeErr) {
            @Override
            protected SgediParams get() {
                return getSgedircci().getCodeErr();
            }

            @Override
            protected void set(SgediParams sgediParams) {
                getSgedircci().setCodeErr(sgediParams);
            }
        };
    }

    public GenericToOneAssociation<SgediParams, Integer> getCodeErr() {
        return codeErr;
    }

    @PostConstruct
    void setupSgediRccidotationsActions() {
        sgediRccidotations = new GenericToManyAssociation<SgediRccidotation, Integer>(getSgedircci().getSgediRccidotations(), sgediRccidotationController,
                Sgedircci_.sgediRccidotations) {
            @Override
            protected void remove(SgediRccidotation sgediRccidotation) {
                getSgedircci().removeSgediRccidotation(sgediRccidotation);
            }

            @Override
            protected void add(SgediRccidotation sgediRccidotation) {
                getSgedircci().addSgediRccidotation(sgediRccidotation);
            }

            @Override
            protected void onCreate(SgediRccidotation sgediRccidotation) {
                sgediRccidotation.setIdrcci(getSgedircci()); // for display
            }
        };
    }

    public GenericToManyAssociation<SgediRccidotation, Integer> getSgediRccidotations() {
        return sgediRccidotations;
    }

    @PostConstruct
    void setupSgediEdircciMosActions() {
        sgediEdircciMos = new GenericToManyAssociation<SgediEdircciMo, Integer>(getSgedircci().getSgediEdircciMos(), sgediEdircciMoController,
                Sgedircci_.sgediEdircciMos) {
            @Override
            protected void remove(SgediEdircciMo sgediEdircciMo) {
                getSgedircci().removeSgediEdircciMo(sgediEdircciMo);
            }

            @Override
            protected void add(SgediEdircciMo sgediEdircciMo) {
                getSgedircci().addSgediEdircciMo(sgediEdircciMo);
            }

            @Override
            protected void onCreate(SgediEdircciMo sgediEdircciMo) {
                sgediEdircciMo.setIdrcci(getSgedircci()); // for display
            }
        };
    }

    public GenericToManyAssociation<SgediEdircciMo, Integer> getSgediEdircciMos() {
        return sgediEdircciMos;
    }
}
