/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-jsf2-spring-conversation:src/main/java/domain/SearchForm.e.vm.java
 * Template is part of Open Source Project: https://github.com/jaxio/pack-jsf2-spring-conversation
 */
package ma.sgma.edi2.web.domain;

import static com.jaxio.jpa.querybyexample.PropertySelector.newPropertySelector;

import javax.inject.Named;

import com.jaxio.jpa.querybyexample.PropertySelector;
import com.jaxio.jpa.querybyexample.SearchParameters;

import ma.sgma.edi2.domain.SgediTitrerffi;
import ma.sgma.edi2.domain.SgediTitrerffi_;
import ma.sgma.edi2.domain.Sgedirffi;
import ma.sgma.edi2.web.domain.support.GenericSearchForm;
import ma.sgma.edi2.web.faces.ConversationContextScoped;

/**
 * View Helper to search {@link SgediTitrerffi}.
 * It exposes a {@link SgediTitrerffi} instance so it can be used in search by-example-query.
 */
@Named
@ConversationContextScoped
public class SgediTitrerffiSearchForm extends GenericSearchForm<SgediTitrerffi, Integer, SgediTitrerffiSearchForm> {
    private static final long serialVersionUID = 1L;
    protected SgediTitrerffi sgediTitrerffi = new SgediTitrerffi();
    protected PropertySelector<SgediTitrerffi, String> titreSelector = newPropertySelector(SgediTitrerffi_.titre);
    protected PropertySelector<SgediTitrerffi, Sgedirffi> idrffiSelector = newPropertySelector(SgediTitrerffi_.idrffi);

    public SgediTitrerffi getSgediTitrerffi() {
        return sgediTitrerffi;
    }

    @Override
    protected SgediTitrerffi getEntity() {
        return getSgediTitrerffi();
    }

    @Override
    public SgediTitrerffiSearchForm newInstance() {
        return new SgediTitrerffiSearchForm();
    }

    @Override
    public SearchParameters toSearchParameters() {
        SearchParameters sp = searchParameters();
        sp.fetch(SgediTitrerffi_.idrffi);
        sp.property(titreSelector);
        sp.property(idrffiSelector);
        return sp;
    }

    @Override
    public void resetWithOther(SgediTitrerffiSearchForm other) {
        this.sgediTitrerffi = other.getSgediTitrerffi();
        this.titreSelector = other.getTitreSelector();
        this.idrffiSelector = other.getIdrffiSelector();
    }

    // Property selectors
    public PropertySelector<SgediTitrerffi, String> getTitreSelector() {
        return titreSelector;
    }

    // Relation selectors
    public PropertySelector<SgediTitrerffi, Sgedirffi> getIdrffiSelector() {
        return idrffiSelector;
    }
}
