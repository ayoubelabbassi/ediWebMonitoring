--
-- Source code generated by Celerio, a Jaxio product.
-- Documentation: http://www.jaxio.com/documentation/celerio/
-- Follow us on twitter: @jaxiosoft
-- Need commercial support ? Contact us: info@jaxio.com
-- Template pack-backend-jpa:src/main/sql/h2/01-create.p.vm.sql
-- Template is part of Open Source Project: https://github.com/jaxio/pack-backend-jpa
--

DROP ALL objects;


-- =================================
-- TABLE account 
-- =================================

CREATE TABLE account (
	account_id INTEGER(10) not null,
	login VARCHAR(255) not null,
	password VARCHAR(255) not null,
	is_enabled BIT(1) not null,
	last_connection DATE,
	mdp_expiration DATE,
	email VARCHAR(250));

CREATE UNIQUE INDEX IF NOT EXISTS sgedi_account_pkey ON account (account_id);
ALTER TABLE account ALTER COLUMN account_id IDENTITY;


-- =================================
-- TABLE account_role 
-- =================================

CREATE TABLE account_role (
	id INTEGER(10) not null,
	account_id INTEGER(10) not null,
	role_id INTEGER(10) not null);

CREATE UNIQUE INDEX IF NOT EXISTS account_role_pkey ON account_role (id);
ALTER TABLE account_role ALTER COLUMN id IDENTITY;


-- =================================
-- TABLE auditlog 
-- =================================

CREATE TABLE auditlog (
	id INTEGER(10) not null,
	author VARCHAR(256),
	event VARCHAR(256),
	event_date TIMESTAMP,
	string_attribute_1 VARCHAR(256),
	string_attribute_2 VARCHAR(256),
	string_attribute_3 VARCHAR(256));

CREATE UNIQUE INDEX IF NOT EXISTS auditlog_pkey ON auditlog (id);
ALTER TABLE auditlog ALTER COLUMN id IDENTITY;


-- =================================
-- TABLE saved_search 
-- =================================

CREATE TABLE saved_search (
	id INTEGER(10) not null,
	name VARCHAR(128) not null,
	form_classname VARCHAR(256) not null,
	form_content BINARY(2147483647),
	account_id INTEGER(10));

CREATE UNIQUE INDEX IF NOT EXISTS pk_saved_search_id ON saved_search (id);
ALTER TABLE saved_search ALTER COLUMN id IDENTITY;


-- =================================
-- TABLE sgedi_dictodc 
-- =================================

CREATE TABLE sgedi_dictodc (
	id INTEGER(10) not null,
	code INTEGER(10) not null,
	libelle VARCHAR(100) not null,
	lib1 VARCHAR(100),
	lib2 VARCHAR(100),
	lib3 VARCHAR(100));

CREATE UNIQUE INDEX IF NOT EXISTS sgedi_dictodc_pkey ON sgedi_dictodc (id);
ALTER TABLE sgedi_dictodc ALTER COLUMN id IDENTITY;


-- =================================
-- TABLE sgedi_edircci_mo 
-- =================================

CREATE TABLE sgedi_edircci_mo (
	id INTEGER(10) not null,
	idrcci INTEGER(10) not null,
	mouvrage VARCHAR(70));

CREATE UNIQUE INDEX IF NOT EXISTS sgedi_edircci_mo_pkey ON sgedi_edircci_mo (id);
ALTER TABLE sgedi_edircci_mo ALTER COLUMN id IDENTITY;


-- =================================
-- TABLE sgedi_params 
-- =================================

CREATE TABLE sgedi_params (
	id INTEGER(10) not null,
	code VARCHAR(4) not null,
	libelle VARCHAR(100) not null,
	lib1 VARCHAR(100),
	lib2 VARCHAR(100),
	lib3 VARCHAR(100));

CREATE UNIQUE INDEX IF NOT EXISTS sgedi_params_pkey ON sgedi_params (id);
ALTER TABLE sgedi_params ALTER COLUMN id IDENTITY;


-- =================================
-- TABLE sgedi_rccidotation 
-- =================================

CREATE TABLE sgedi_rccidotation (
	id INTEGER(10) not null,
	idrcci INTEGER(10) not null,
	dottyp INTEGER(10) not null);

CREATE UNIQUE INDEX IF NOT EXISTS sgedi_rccidotation_pkey ON sgedi_rccidotation (id);
ALTER TABLE sgedi_rccidotation ALTER COLUMN id IDENTITY;


-- =================================
-- TABLE sgedi_titrerffi 
-- =================================

CREATE TABLE sgedi_titrerffi (
	id INTEGER(10) not null,
	idrffi INTEGER(10),
	titre VARCHAR(100));

CREATE UNIQUE INDEX IF NOT EXISTS sgedi_titrerffi_pkey ON sgedi_titrerffi (id);
ALTER TABLE sgedi_titrerffi ALTER COLUMN id IDENTITY;


-- =================================
-- TABLE sgedircci 
-- =================================

CREATE TABLE sgedircci (
	id INTEGER(10) not null,
	code_ligne VARCHAR(50) not null,
	code_banque VARCHAR(3) not null,
	code_localite VARCHAR(3) not null,
	numero_guichet VARCHAR(7) not null,
	annee_rcc VARCHAR(4) not null,
	mois_rcc VARCHAR(4) not null,
	ncompte_carte INTEGER(10) not null,
	rcompte_carte INTEGER(10) not null,
	douverture_emission INTEGER(10) not null,
	dcompte_carte VARCHAR(3),
	nom_rsociale VARCHAR(250),
	qualite_sclient INTEGER(10),
	type_identification INTEGER(10) not null,
	num_identification VARCHAR(35) not null,
	centre_rc VARCHAR(3),
	rc VARCHAR(6),
	pays VARCHAR(2),
	ville VARCHAR(25),
	adresse VARCHAR(250),
	sdebut NUMERIC(13),
	total_mcredit NUMERIC(13),
	total_mdebit NUMERIC(13),
	solde_fmois NUMERIC(13),
	champ_supp2 VARCHAR(400),
	champ_supp3 VARCHAR(400),
	champ_supp4 VARCHAR(400),
	champ_supp5 VARCHAR(400),
	creation_date TIMESTAMP,
	creation_author VARCHAR(200),
	last_modification_date TIMESTAMP,
	last_modification_author VARCHAR(200),
	statut_int INTEGER(10),
	statut_ech INTEGER(10),
	code_err INTEGER(10),
	motif VARCHAR(400),
	code_role INTEGER(10),
	id_xml INTEGER(10),
	lib1 VARCHAR(100),
	lib2 VARCHAR(100),
	lib3 VARCHAR(100));

CREATE UNIQUE INDEX IF NOT EXISTS sgedircci_pkey ON sgedircci (id);
ALTER TABLE sgedircci ALTER COLUMN id IDENTITY;


-- =================================
-- TABLE sgedirffi 
-- =================================

CREATE TABLE sgedirffi (
	id INTEGER(10) not null,
	code_ligne VARCHAR(50),
	code_banque VARCHAR(3) not null,
	numero_guichet VARCHAR(7) not null,
	anne_rffi VARCHAR(4),
	mois_rffi VARCHAR(2),
	decade_rffi VARCHAR(2),
	bic_swift VARCHAR(11),
	ncp VARCHAR(11),
	nom_rsociale VARCHAR(200),
	qualite INTEGER(10),
	type_identification INTEGER(10),
	num_identification VARCHAR(35),
	centre_rc VARCHAR(3),
	rc VARCHAR(100),
	pays VARCHAR(2),
	ville VARCHAR(200),
	adresse VARCHAR(200),
	nom_rsociale_partenaire VARCHAR(200),
	pays_partenaire VARCHAR(2),
	sens_operation INTEGER(10) not null,
	categorie_formule INTEGER(10) not null,
	code_noperation VARCHAR(4),
	pprovenance_destination VARCHAR(2),
	code_devise VARCHAR(3),
	montant_devise DOUBLE(17),
	cours_applique DOUBLE(17),
	montant_applique DOUBLE(17),
	date_execution DATE,
	numero_autorisation_oc VARCHAR(20),
	numero_dossier VARCHAR(30),
	information_operation VARCHAR(400),
	champ_supp2 VARCHAR(400),
	champ_supp3 VARCHAR(400),
	champ_supp4 VARCHAR(400),
	champ_supp5 VARCHAR(400),
	creation_date TIMESTAMP not null,
	creation_author VARCHAR(200),
	last_modification_date TIMESTAMP,
	last_modification_author VARCHAR(200),
	statut_int INTEGER(10),
	statut_ech INTEGER(10),
	code_err INTEGER(10),
	motif VARCHAR(400),
	properties VARCHAR(400),
	valeur_err VARCHAR(400),
	code_role INTEGER(10),
	id_xml INTEGER(10),
	lib1 VARCHAR(100),
	lib2 VARCHAR(100),
	lib3 VARCHAR(100),
	numero_formule VARCHAR(100),
	client VARCHAR(50),
	code_localite VARCHAR(3),
	date_comptable DATE,
	motifoc VARCHAR(250),
	codeerrodc VARCHAR(10),
	affectprofil VARCHAR(200),
	date_affect TIMESTAMP);

CREATE UNIQUE INDEX IF NOT EXISTS sgedirffi_pkey ON sgedirffi (id);
ALTER TABLE sgedirffi ALTER COLUMN id IDENTITY;


-- =================================
-- TABLE sgedirffi_errors 
-- =================================

CREATE TABLE sgedirffi_errors (
	id INTEGER(10) not null,
	coderffi BIGINT(19),
	propriete VARCHAR(400),
	motif VARCHAR(400),
	value_error VARCHAR(400));

CREATE UNIQUE INDEX IF NOT EXISTS pk_sgedirffi_errors ON sgedirffi_errors (id);
ALTER TABLE sgedirffi_errors ALTER COLUMN id IDENTITY;


-- =================================
-- TABLE sgedixml 
-- =================================

CREATE TABLE sgedixml (
	id INTEGER(10) not null,
	xml VARCHAR(200) not null,
	sens INTEGER(10) not null,
	typ VARCHAR(4) not null,
	anne INTEGER(10) not null,
	mois INTEGER(10) not null,
	decade INTEGER(10) not null,
	date_gen TIMESTAMP not null);

CREATE UNIQUE INDEX IF NOT EXISTS sgedixml_pkey ON sgedixml (id);
ALTER TABLE sgedixml ALTER COLUMN id IDENTITY;


-- =================================
-- TABLE userrole 
-- =================================

CREATE TABLE userrole (
	role_id INTEGER(10) not null,
	role VARCHAR(255) not null);

CREATE UNIQUE INDEX IF NOT EXISTS sgedi_role_pkey ON userrole (role_id);
ALTER TABLE userrole ALTER COLUMN role_id IDENTITY;

ALTER TABLE account_role ADD CONSTRAINT FK_SGEDI_ACCOUNTROLE_SGEDI_ACCOUNT FOREIGN KEY (account_id) REFERENCES account (account_id);
ALTER TABLE account_role ADD CONSTRAINT FK_SGEDI_ACCOUNTROLE_SGEDI_ROLE FOREIGN KEY (role_id) REFERENCES userrole (role_id);
ALTER TABLE saved_search ADD CONSTRAINT FK_SAVED_SEARCH_SGEDI_ACCOUNT FOREIGN KEY (account_id) REFERENCES account (account_id);
ALTER TABLE sgedi_edircci_mo ADD CONSTRAINT FK_SGEDI_EDIRCCI_MO_SGEDIRCCI FOREIGN KEY (idrcci) REFERENCES sgedircci (id);
ALTER TABLE sgedi_rccidotation ADD CONSTRAINT FK_SGEDI_RCCIDOTATION_SGEDIRCCI FOREIGN KEY (idrcci) REFERENCES sgedircci (id);
ALTER TABLE sgedi_titrerffi ADD CONSTRAINT FK_SGEDI_TITRERFFI FOREIGN KEY (idrffi) REFERENCES sgedirffi (id);
ALTER TABLE sgedircci ADD CONSTRAINT FK_SGEDIRCCI_SGEDI_DICTODC FOREIGN KEY (qualite_sclient) REFERENCES sgedi_dictodc (id);
ALTER TABLE sgedircci ADD CONSTRAINT FK_SGEDIRCCI_SGEDI_ROLE FOREIGN KEY (code_role) REFERENCES userrole (role_id);
ALTER TABLE sgedircci ADD CONSTRAINT FK_SGEDIRCCI_SGEDIXML_0 FOREIGN KEY (id_xml) REFERENCES sgedixml (id);
ALTER TABLE sgedircci ADD CONSTRAINT FK_SGEDIRCCI_SGEDI_PARAMS FOREIGN KEY (statut_int) REFERENCES sgedi_params (id);
ALTER TABLE sgedircci ADD CONSTRAINT FK_SGEDIRCCI_SGEDI_DICTODC_0 FOREIGN KEY (type_identification) REFERENCES sgedi_dictodc (id);
ALTER TABLE sgedircci ADD CONSTRAINT FK_SGEDIRCCI_SGEDI_PARAMS_0 FOREIGN KEY (statut_ech) REFERENCES sgedi_params (id);
ALTER TABLE sgedircci ADD CONSTRAINT FK_SGEDIRCCI_SGEDI_PARAMS_1 FOREIGN KEY (code_err) REFERENCES sgedi_params (id);
ALTER TABLE sgedirffi ADD CONSTRAINT FK_SGEDIRFFI_SGEDIXML FOREIGN KEY (id_xml) REFERENCES sgedixml (id);
ALTER TABLE sgedirffi ADD CONSTRAINT FK_SGEDIRFFI_SGEDI_DICTODC2 FOREIGN KEY (type_identification) REFERENCES sgedi_dictodc (id);
ALTER TABLE sgedirffi ADD CONSTRAINT FK_SGEDIRFFI_SGEDI_PARAMS FOREIGN KEY (statut_int) REFERENCES sgedi_params (id);
ALTER TABLE sgedirffi ADD CONSTRAINT FK_SGEDIRFFI_SGEDI_DICTODC FOREIGN KEY (qualite) REFERENCES sgedi_dictodc (id);
ALTER TABLE sgedirffi ADD CONSTRAINT FK_SGEDIRFFI_SGEDI_ROLE FOREIGN KEY (code_role) REFERENCES userrole (role_id);
ALTER TABLE sgedirffi ADD CONSTRAINT FK_SGEDIRFFI_SGEDI_DICTODC4 FOREIGN KEY (categorie_formule) REFERENCES sgedi_dictodc (id);
ALTER TABLE sgedirffi ADD CONSTRAINT FK_SGEDIRFFI_SGEDI_DICTODC3 FOREIGN KEY (sens_operation) REFERENCES sgedi_dictodc (id);
ALTER TABLE sgedirffi ADD CONSTRAINT FK_SGEDIRFFI_SGEDI_PARAMS5 FOREIGN KEY (statut_ech) REFERENCES sgedi_params (id);
ALTER TABLE sgedirffi_errors ADD CONSTRAINT FK_RFFI_ERROR FOREIGN KEY (coderffi) REFERENCES sgedirffi (id);