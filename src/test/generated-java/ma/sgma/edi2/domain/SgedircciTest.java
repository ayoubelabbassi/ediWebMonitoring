/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-backend-jpa:src/test/java/domain/ModelTest.e.vm.java
 * Template is part of Open Source Project: https://github.com/jaxio/pack-backend-jpa
 */
package ma.sgma.edi2.domain;

import static org.fest.assertions.Assertions.assertThat;

import java.io.*;
import java.util.*;

import org.junit.Test;

import ma.sgma.edi2.util.ValueGenerator;

/**
 * Basic tests for Sgedircci
 */
@SuppressWarnings("unused")
public class SgedircciTest {

    // test unique primary key
    @Test
    public void newInstanceHasNoPrimaryKey() {
        Sgedircci model = new Sgedircci();
        assertThat(model.isIdSet()).isFalse();
    }

    @Test
    public void isIdSetReturnsTrue() {
        Sgedircci model = new Sgedircci();
        model.setId(ValueGenerator.getUniqueInteger());
        assertThat(model.getId()).isNotNull();
        assertThat(model.isIdSet()).isTrue();
    }

    //-------------------------------------------------------------
    // Many to One:  Sgedircci.qualiteSclient ==> SgediDictodc.id
    //-------------------------------------------------------------

    @Test
    public void manyToOne_setQualiteSclient() {
        Sgedircci many = new Sgedircci();

        // init
        SgediDictodc one = new SgediDictodc();
        one.setId(ValueGenerator.getUniqueInteger());
        many.setQualiteSclient(one);

        // make sure it is propagated properly
        assertThat(many.getQualiteSclient()).isEqualTo(one);

        // now set it to back to null
        many.setQualiteSclient(null);

        // make sure null is propagated properly
        assertThat(many.getQualiteSclient()).isNull();
    }

    @Test
    public void manyToOne_setCodeRole() {
        Sgedircci many = new Sgedircci();

        // init
        Userrole one = new Userrole();
        one.setId(ValueGenerator.getUniqueInteger());
        many.setCodeRole(one);

        // make sure it is propagated properly
        assertThat(many.getCodeRole()).isEqualTo(one);

        // now set it to back to null
        many.setCodeRole(null);

        // make sure null is propagated properly
        assertThat(many.getCodeRole()).isNull();
    }

    @Test
    public void manyToOne_setIdXml() {
        Sgedircci many = new Sgedircci();

        // init
        Sgedixml one = new Sgedixml();
        one.setId(ValueGenerator.getUniqueInteger());
        many.setIdXml(one);

        // make sure it is propagated properly
        assertThat(many.getIdXml()).isEqualTo(one);

        // now set it to back to null
        many.setIdXml(null);

        // make sure null is propagated properly
        assertThat(many.getIdXml()).isNull();
    }

    @Test
    public void manyToOne_setStatutInt() {
        Sgedircci many = new Sgedircci();

        // init
        SgediParams one = new SgediParams();
        one.setId(ValueGenerator.getUniqueInteger());
        many.setStatutInt(one);

        // make sure it is propagated properly
        assertThat(many.getStatutInt()).isEqualTo(one);

        // now set it to back to null
        many.setStatutInt(null);

        // make sure null is propagated properly
        assertThat(many.getStatutInt()).isNull();
    }

    @Test
    public void manyToOne_setTypeIdentification() {
        Sgedircci many = new Sgedircci();

        // init
        SgediDictodc one = new SgediDictodc();
        one.setId(ValueGenerator.getUniqueInteger());
        many.setTypeIdentification(one);

        // make sure it is propagated properly
        assertThat(many.getTypeIdentification()).isEqualTo(one);

        // now set it to back to null
        many.setTypeIdentification(null);

        // make sure null is propagated properly
        assertThat(many.getTypeIdentification()).isNull();
    }

    @Test
    public void manyToOne_setStatutEch() {
        Sgedircci many = new Sgedircci();

        // init
        SgediParams one = new SgediParams();
        one.setId(ValueGenerator.getUniqueInteger());
        many.setStatutEch(one);

        // make sure it is propagated properly
        assertThat(many.getStatutEch()).isEqualTo(one);

        // now set it to back to null
        many.setStatutEch(null);

        // make sure null is propagated properly
        assertThat(many.getStatutEch()).isNull();
    }

    @Test
    public void manyToOne_setCodeErr() {
        Sgedircci many = new Sgedircci();

        // init
        SgediParams one = new SgediParams();
        one.setId(ValueGenerator.getUniqueInteger());
        many.setCodeErr(one);

        // make sure it is propagated properly
        assertThat(many.getCodeErr()).isEqualTo(one);

        // now set it to back to null
        many.setCodeErr(null);

        // make sure null is propagated properly
        assertThat(many.getCodeErr()).isNull();
    }

    //-------------------------------------------------------------
    // One to Many: SimpleOneToMany sgedircci.id ==> sgedi_rccidotation.idrcci
    //-------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // sgediRccidotation.sgediRccidotation <-- sgedircci.idrccis
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @Test
    public void oneToMany_addSgediRccidotation() {
        Sgedircci one = new Sgedircci();
        SgediRccidotation many = new SgediRccidotation();

        // init
        one.addSgediRccidotation(many);

        // make sure it is propagated
        assertThat(one.getSgediRccidotations()).contains(many);
        assertThat(one).isEqualTo(many.getIdrcci());

        // now set it to null
        one.removeSgediRccidotation(many);

        // make sure null is propagated
        assertThat(one.getSgediRccidotations().contains(many)).isFalse();
        assertThat(many.getIdrcci()).isNull();
    }

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // sgediEdircciMo.sgediEdircciMo <-- sgedircci.idrccis
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @Test
    public void oneToMany_addSgediEdircciMo() {
        Sgedircci one = new Sgedircci();
        SgediEdircciMo many = new SgediEdircciMo();

        // init
        one.addSgediEdircciMo(many);

        // make sure it is propagated
        assertThat(one.getSgediEdircciMos()).contains(many);
        assertThat(one).isEqualTo(many.getIdrcci());

        // now set it to null
        one.removeSgediEdircciMo(many);

        // make sure null is propagated
        assertThat(one.getSgediEdircciMos().contains(many)).isFalse();
        assertThat(many.getIdrcci()).isNull();
    }

    /*
    public void equalsUsingPk() {
        Sgedircci model1 = new Sgedircci();
        Sgedircci model2 = new Sgedircci();
    
        Integer id = ValueGenerator.getUniqueInteger();
        model1.setId(id);
        model2.setId(id);
    
        model1.setCodeLigne("a");
        model2.setCodeLigne("a");
    
        model1.setCodeBanque("a");
        model2.setCodeBanque("a");
    
        model1.setCodeLocalite("a");
        model2.setCodeLocalite("a");
    
        model1.setNumeroGuichet("a");
        model2.setNumeroGuichet("a");
    
        model1.setAnneeRcc("a");
        model2.setAnneeRcc("a");
    
        model1.setMoisRcc("a");
        model2.setMoisRcc("a");
    
        model1.setNcompteCarte(1);
        model2.setNcompteCarte(1);
    
        model1.setRcompteCarte(1);
        model2.setRcompteCarte(1);
    
        model1.setDouvertureEmission(1);
        model2.setDouvertureEmission(1);
    
        model1.setDcompteCarte("a");
        model2.setDcompteCarte("a");
    
        model1.setNomRsociale("a");
        model2.setNomRsociale("a");
    
        model1.setNumIdentification("a");
        model2.setNumIdentification("a");
    
        model1.setCentreRc("a");
        model2.setCentreRc("a");
    
        model1.setRc("a");
        model2.setRc("a");
    
        model1.setPays("a");
        model2.setPays("a");
    
        model1.setVille("a");
        model2.setVille("a");
    
        model1.setAdresse("a");
        model2.setAdresse("a");
    
        model1.setSdebut(1l);
        model2.setSdebut(1l);
    
        model1.setTotalMcredit(1l);
        model2.setTotalMcredit(1l);
    
        model1.setTotalMdebit(1l);
        model2.setTotalMdebit(1l);
    
        model1.setSoldeFmois(1l);
        model2.setSoldeFmois(1l);
    
        model1.setChampSupp2("a");
        model2.setChampSupp2("a");
    
        model1.setChampSupp3("a");
        model2.setChampSupp3("a");
    
        model1.setChampSupp4("a");
        model2.setChampSupp4("a");
    
        model1.setChampSupp5("a");
        model2.setChampSupp5("a");
    
        model1.setCreationDate(new Date());
        model2.setCreationDate(new Date());
    
        model1.setCreationAuthor("a");
        model2.setCreationAuthor("a");
    
        model1.setLastModificationDate(new Date());
        model2.setLastModificationDate(new Date());
    
        model1.setLastModificationAuthor("a");
        model2.setLastModificationAuthor("a");
    
        model1.setMotif("a");
        model2.setMotif("a");
    
        model1.setLib1("a");
        model2.setLib1("a");
    
        model1.setLib2("a");
        model2.setLib2("a");
    
        model1.setLib3("a");
        model2.setLib3("a");
        assertThat(model1.isIdSet()).isTrue();
        assertThat(model2.isIdSet()).isTrue();
        assertThat(model1.hashCode()).isEqualTo(model2.hashCode());
        assertThat(model1).isEqualTo(model2);
        assertThat(model2).isEqualTo(model1);
    }
     */
}